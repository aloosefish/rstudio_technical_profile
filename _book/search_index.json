[
["building.html", "5 Building 5.1 RStudio IDE 5.2 Shiny 5.3 Tidyverse", " 5 Building 5.1 RStudio IDE 5.1.1 IDE An IDE, or integrated development environment, is to writing code what a word processor is to writing words. Code can be written using basically any text editor, but there are numerous benefits to using an IDE. 5.1.1.1 One, syntax-highlighting, formatting Syntax-highlighing makes it easier to see if a syntax error is present in your code. Rather than waiting until the code is run and trying to understand the error from the error message, syntax-highlighting lets you see errors as they are made. This is analogous to inline spellchecking in a word processor like Microsoft Word. 5.1.1.2 Text formatting Text formatting changes adjusts the arrangement of code in a document to make it easier to read. RStudio also allows companies with specific code-styling and formatting standards to input custom configurations. {{visual example}} 5.1.1.3 run code locally, contrast with running code using console. The “integrated” in integrated development environment refers to ability to write code and see its output or result in a single interface. This is in contrast to writing code for a website, but needing to open a browser or navigate a file system to see the result. Because R can be used to create a variety of data visualizations, RStudio incorporate a resizable “Viewer” window within the RStudio interface. 5.1.1.4 text-completion, integrated documentation There are thousands of packages in CRAN. RStudio includes rich text-completion capabilities for all functions and data structures in loaded packages. This greatly simplifies the process of writing code as you no longer needs to commit to memory every single function you might need to use. As soon as you start typing into RStudio, it pulls up any function that matches what you type. If, as you are writing code, you are unsure which function to use, you are always a single typestroke away from the documentation. 5.1.1.5 Version Control Nothing is worse than losing work you have spent a lot of time on. 5.1.1.6 Tracking Progress 5.1.1.7 Collaboration Global teams, using RStudio as an example 5.2 Shiny Modern readers are accustom to dynamic, interactive data visualizatons. Until recently, R vast graphical capabilities were limited to static forms. If an analyst wanted to create and publish interactive visualizations on the web, they needed to learn some pretty advanced web development, which is may or may not be of interest to an analyst. Shiny is a package that allows analysts who only know R to create interactive data visualizations using tools with which they are already familiar. 5.3 Tidyverse 5.3.1 Introductory discussion 5.3.1.1 Grammar of data manipulation 5.3.1.1.1 80/20 wrangling to analysis The tidyverse aims to shift the time spent away from wrangling to analysis. 5.3.1.2 Grammar of graphics "]
]
